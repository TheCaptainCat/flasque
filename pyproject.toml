[tool.poetry]
name = "bolinette"
version = "0.18.1"
description = "An inversion of control framework in Python"
authors = ["Pierre Chat <pierrechat@outlook.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://bolinette.org"
repository = "https://github.com/bolinette/bolinette"
documentation = "https://bolinette.org/docs"

[tool.poetry.scripts]
blnt = "bolinette.core.__main__:main"

[tool.poetry.dependencies]
python = "^3.12"
aiosqlite = "^0.20.0"
asyncpg = "^0.29.0"
pyyaml = "^6.0.1"
sqlalchemy = "^2.0.28"

[tool.poetry.group.dev.dependencies]
autoflake8 = "^0.4.1"
black = "^24.3.0"
mypy = "^1.9.0"
ruff = "^0.3.4"
uvicorn = { extras = ["standard"], version = "^0.29.0" }

[tool.poetry.group.test.dependencies]
coverage = "^7.4.1"
pytest = "^8.0.1"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__init__.py",
]

target-version = "py312"

[tool.ruff.lint]
select = ["E", "W", "F", "B", "Q", "I", "N", "RUF", "UP"]
ignore = ["B010"]
fixable = ["ALL"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.isort]
py_version = 312
line_length = 120
skip = ["__init__.py"]
profile = "black"

[tool.black]
line-length = 120
target-version = ['py312']

[tool.pytest.ini_options]
testpaths = "tests"
asyncio_mode = "auto"

[tool.coverage.report]
exclude_lines = ['pass', 'if TYPE_CHECKING:', '\.\.\.$']

[tool.bolinette]
app_factory = "example.app:make_bolinette"
